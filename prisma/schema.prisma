// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model Daftar_Jurusan {
//   id          Int    @id @default(autoincrement())
//   NamaJurusan String
// }

model user {
  UserID          String            @id @default(uuid())
  Username        String            @unique @default(uuid())
  Password        String
  NoTelp          BigInt
  Email           String            @unique
  NamaLengkap     String
  Alamat          String            @db.Text()
  Sekolah         String
  Tipe            String
  ProfilAkun      String
  koleksi_pribadi koleksi_pribadi[]
  ulasan_buku     ulasan_buku[]
  peminjaman      peminjaman[]
}

model kode_admin {
  Kode                 String                 @id
  Sekolah              String
  buku                 buku[]
  kategori_buku        kategori_buku[]
  kategori_buku_relasi kategori_buku_relasi[]
  koleksi_pribadi      koleksi_pribadi[]
  ulasan_buku          ulasan_buku[]
  peminjaman           peminjaman[]
}

model buku {
  BukuID               String                 @id @default(cuid())
  Gambar               String
  Judul                String
  Penulis              String
  Penerbit             String
  Sinopsis             String                 @db.Text()
  TahunTerbit          Int                    @default(0)
  Jumlah               Int                    @default(0)
  Kode                 kode_admin             @relation(fields: [kode_admin], references: [Kode])
  kode_admin           String
  kategori_buku_relasi kategori_buku_relasi[]
  koleksi_pribadi      koleksi_pribadi[]
  ulasan_buku          ulasan_buku[]
  peminjaman           peminjaman[]
}

model peminjaman {
  idPeminjaman        String            @id @default(uuid())
  tanggalPeminjaman   BigInt
  tanggalPengembalian BigInt
  jumlah              Int
  dibuatPada          BigInt
  UserID              user              @relation(fields: [idUser], references: [UserID])
  idUser              String
  BukuID              buku              @relation(fields: [idBuku], references: [BukuID])
  idBuku              String
  Kode                kode_admin        @relation(fields: [kodeAdmin], references: [Kode])
  kodeAdmin           String
  id                  status_peminjaman @relation(fields: [status], references: [id])
  status              Int
  telahKembali        BigInt
  terlambat           Int
}

// bugs di prisma kalo misal saat create terus ada error di relasi nya , padahal sudah benar, coba tulis ulang kembali, misal error di peminjaman , cari yang peminjman[] ini hapus dulu terus tulis lagi relasi ny, 

model status_peminjaman {
  id         Int          @id
  status     String
  peminjaman peminjaman[]
}

model kategori_buku {
  idKategori           String                 @id
  nama                 String
  Kode                 kode_admin             @relation(fields: [kodeAdmin], references: [Kode])
  kodeAdmin            String
  kategori_buku_relasi kategori_buku_relasi[]
}

model kategori_buku_relasi {
  idKategoriRelasi String        @id @default(uuid())
  BukuID           buku          @relation(fields: [idBuku], references: [BukuID])
  idBuku           String
  idKategori       kategori_buku @relation(fields: [idKategoriID], references: [idKategori])
  idKategoriID     String
  Kode             kode_admin    @relation(fields: [kodeAdmin], references: [Kode])
  kodeAdmin        String
}

model koleksi_pribadi {
  koleksiID String     @id @default(cuid())
  UserID    user       @relation(fields: [idUser], references: [UserID])
  idUser    String
  BukuID    buku       @relation(fields: [idBuku], references: [BukuID])
  idBuku    String
  Kode      kode_admin @relation(fields: [kodeAdmin], references: [Kode])
  kodeAdmin String
}

model ulasan_buku {
  ulasanID   String     @id @default(uuid())
  UserID     user       @relation(fields: [idUser], references: [UserID])
  idUser     String
  BukuID     buku       @relation(fields: [idBuku], references: [BukuID])
  idBuku     String
  Kode       kode_admin @relation(fields: [kodeAdmin], references: [Kode])
  kodeAdmin  String
  pesan      String     @db.Text
  rating     Int
  dibuatPada BigInt
}
